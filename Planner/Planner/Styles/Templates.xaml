<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="General.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Textbox Template  -->
    <Style x:Key="TaskTextBoxTemlate" TargetType="{x:Type TextBox}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type TextBox}">
                        <Border Name="border" 
                                Padding="5"
                                Margin="3 0"
                                CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="White" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!-- ListViewItem Template  -->
    <Style x:Key="TaskItemTmplate" TargetType="{x:Type ListViewItem}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Name="border" 
                                Padding="10 4 3 4"
                                Margin="0 0 5 7"
                                CornerRadius="7"
                                Background="#F9F9F9">
                            <Grid HorizontalAlignment="Stretch" Height="30">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>

                                <CheckBox Grid.Column="0" 
                                                    IsChecked="{ Binding IsDone, Mode=TwoWay}" 
                                                    VerticalAlignment="Center"/>
                                <Border CornerRadius="10" Grid.Column="1" BorderThickness="1" BorderBrush="Transparent">
                                    <TextBox x:Name="taskText" Text="{ Binding Text, Mode=TwoWay }" 
                                             Style="{StaticResource TaskTextBoxTemlate}" >
                                        <TextBox.InputBindings>
                                            
                                        </TextBox.InputBindings>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                    AncestorType={x:Type Window}}, 
                                                                                    Path=DataContext.EditCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <!--<TextBox.Triggers>
                                            <EventTrigger RoutedEvent="TextChanged">
                                                <EventTrigger.Actions>
                                                    
                                                </EventTrigger.Actions>
                                            </EventTrigger>
                                        </TextBox.Triggers>-->
                                        
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="KeyUp">
                                                <i:InvokeDataCommand Command="{Binding MyCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                    </TextBox>
                                </Border>
                                <ComboBox Grid.Column="2" SelectedItem="{ Binding Priority, Mode=TwoWay }" ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                    AncestorType={x:Type Window}}, 
                                                                                    Path=DataContext.Priorities}"></ComboBox>
                                <Button Grid.Column="3" 
                                                    VerticalAlignment="Center"
                                                CommandParameter="{ Binding Path=.}"  
                                                Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                    AncestorType={x:Type Window}}, 
                                                                                    Path=DataContext.DeleteCommand}"
                                                Background="Transparent"
                                                BorderBrush="Transparent">
                                    <Image Source="/../Resources/Images/delete-button.png" 
                                                       Height="15" 
                                                       Opacity="0.5"
                                                       VerticalAlignment="Center"/>
                                </Button>
                            </Grid>
                        </Border>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F2F2F2" TargetName="border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!-- CheckBox Template  -->
    <Style TargetType="CheckBox">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                                        Width="20" Height="20"
                                        BorderBrush="#C5C5C5" 
                                        Background="Transparent"
                                        BorderThickness="2" 
                                        CornerRadius="10"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                    <TextBlock x:Name="CheckMark"
                                               Text="x"
                                               FontSize="13"
                                               FontWeight="Bold"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Foreground="#50837A"
                                               Visibility="Hidden"/>
                                </Border>
                            </BulletDecorator.Bullet>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{ StaticResource ThemeColor }"/>
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                <Setter Property="BorderBrush" TargetName="Border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding Source={StaticResource DarkAccentColor}, Path=Color}"
                                                         Opacity="0.4"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="CheckMark" Value="Visible"/>
                                <Setter Property="Background" TargetName="Border" Value="{ StaticResource ThemeColor }"/>
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                <Setter Property="BorderBrush" TargetName="Border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding Source={StaticResource DarkAccentColor}, Path=Color}"
                                                         Opacity="0.4"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    
    <!-- ComboBox Template -->
    <Style TargetType="{x:Type ComboBox}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                        BorderBrush="Transparent"
                                        Background="Transparent"
                                        Foreground="{TemplateBinding Foreground}"
                                        Focusable="false"
                                        IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite"
                                            IsHitTestVisible="False"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            Margin="0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center" />
                            <TextBox x:Name="PART_EditableTextBox"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="0"
                                    Focusable="True"                               
                                    Visibility="Hidden"
                                    IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup  Name="Popup"
                                    Placement="Bottom"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    PopupAnimation="Slide">
                                <Border Margin="30"
                                        Background="White"
                                        BorderThickness="2"
                                        CornerRadius="5">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="0"  BlurRadius="12" Direction="270" Color="#000000" Opacity="0.3"/>
                                    </Border.Effect>

                                    <Grid Name="DropDown"
                                        SnapsToDevicePixels="True"               
                                        MinWidth="{TemplateBinding ActualWidth}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <StackPanel  x:Name="item" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>

                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!-- ComboBoxItem Template -->
    <Style TargetType="{x:Type ComboBoxItem}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="border" BorderThickness="2" Padding="3" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#EEEEEE" TargetName="border"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!-- ScrollBar Thumb Template -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle"
                            SnapsToDevicePixels="True"
                            Background="#DADADA"
                            Opacity="0.7"
                            CornerRadius="4"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar Template -->
    <Style x:Key="ViewerScrollBar"  TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Margin" Value="-14 0 0 0" />
        <Setter Property="MinWidth" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Border Padding="0 4">
                            <Track  x:Name="PART_Track"
                                    IsDirectionReversed="true"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Width="8"
                                    HorizontalAlignment="Center">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageUpCommand}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageDownCommand}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb  }" />
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollViewer Template -->
    <Style TargetType="{ x:Type ScrollViewer }">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                            <ScrollBar Style="{StaticResource ViewerScrollBar}" x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                            <ScrollBar Style="{StaticResource ViewerScrollBar}" x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                        </Grid>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!-- "Add" Button Template -->
    <Style x:Key="AddButtonStyle" TargetType="{ x:Type Button }">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{ x:Type Button }">
                        <Border x:Name="border" 
                                Height="30"
                                Width="30"
                                Background="{ StaticResource BrightAccentColorBrush }" 
                                CornerRadius="15">
                            <TextBlock HorizontalAlignment="Center" 
                                       VerticalAlignment="Center"
                                       Foreground="White"
                                       FontSize="26"
                                       Padding="0">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center"/>
                            </TextBlock>
                            <Border.Effect>
                                <DropShadowEffect x:Name="ButtonShadow" ShadowDepth="0" Color="{ StaticResource BrightAccentColor }" BlurRadius="10"/>
                            </Border.Effect>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Effect" TargetName="border">
                                    <Setter.Value>
                                        <DropShadowEffect ShadowDepth="0" Color="{ StaticResource BrightAccentColor }" BlurRadius="20"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!-- Calendar Template -->
    <Style x:Key="styleDatePickerCalendarItem" TargetType="{x:Type CalendarItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <Label HorizontalAlignment="Center" Margin="0 10 0 0">
                                <TextBlock Foreground="#000" 
                                       FontSize="{StaticResource CalendarWeekDayFontSize}" 
                                       HorizontalAlignment="Center" 
                                       Margin="2" 
                                       Text="{Binding}" 
                                       VerticalAlignment="Center">
                                </TextBlock>
                            </Label>
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Viewbox>
                        <Border Background="#fff"
                            BorderThickness="1"
                            Padding="3"
                            CornerRadius="10">
                            <Border.Effect>
                                <DropShadowEffect Direction="270" BlurRadius="30" ShadowDepth="15" Opacity="0.15" Color="#007C67"/>
                            </Border.Effect>
                            <Grid Name="PART_Root">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <DockPanel Grid.Column="0"
                                           Grid.Row="0"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Stretch"
                                           LastChildFill="True">
                                    <Button x:Name="PART_PreviousButton"
                                            DockPanel.Dock="Left"
                                            Padding="15 0"
                                            Content="&lt;"
                                            Focusable="False"
                                            HorizontalAlignment="Center"
                                            FontSize="{StaticResource CalendarDateFontSize}"
                                            Background="Transparent"
                                            BorderBrush="Transparent">
                                      
                                    </Button>
                                    <Button x:Name="PART_NextButton"
                                            FontSize="{StaticResource CalendarDateFontSize}"
                                            DockPanel.Dock="Right"
                                            Padding="15 0"
                                            Content="&gt;" Focusable="False"
                                            Background="Transparent"
                                            BorderBrush="Transparent"
                                            HorizontalAlignment="Center">

                                    </Button>
                                    <Button x:Name="PART_HeaderButton"
                                            Background="Transparent"
                                            Padding="15 10"
                                            BorderBrush="Transparent"
                                            HorizontalAlignment="Center"
                                            FontSize="{StaticResource CalendarDateFontSize}">
                                        
                                    </Button>
                                </DockPanel>
                                <Grid Grid.Column="0"
                                      Grid.Row="1"
                                      VerticalAlignment="Stretch"
                                      HorizontalAlignment="Center">
                                        <Grid x:Name="PART_MonthView">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                    <Grid x:Name="PART_YearView">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                </Grid>
                                <Rectangle x:Name="PART_DisabledVisual"
                                   Opacity="0"
                                   Visibility="Collapsed"
                                   Fill="#F5F5F5"/>
                            </Grid>
                        </Border>
                    </Viewbox>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Calendar Controls Template -->
    <Style x:Key="styleDatePickerCalendarButton" TargetType="{x:Type CalendarButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarButton}">
                    <Grid x:Name="grid">
                        <Border x:Name="border_today"
                            CornerRadius="2"
                            Background="#FFFFFF"
                            BorderBrush="#9A9A9A"
                            BorderThickness="1"
                            Visibility="Collapsed"></Border>
                        <Border x:Name="border" CornerRadius="3">
                            <TextBlock x:Name="block"
                                   Foreground="#3A3A3A"
                                   FontSize="12"
                                   Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center">
                            </TextBlock>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsInactive" Value="True">
                            <Setter TargetName="block"
                                Property="Foreground"
                                Value="Red">
                            </Setter>
                            <Setter Property="IsEnabled"
                                Value="False">
                            </Setter>
                        </Trigger>
                        <Trigger Property="HasSelectedDays" Value="True">
                            <Setter TargetName="border_today"
                                Property="Visibility"
                                Value="Visible">
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="border"
                                       Property="IsMouseOver"
                                       Value="True">
                                </Condition>
                                <Condition Property="IsInactive"
                                       Value="False">
                                </Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="border"
                                    Property="Background"
                                    Value="#66CED3C4">
                                </Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Calendar Day Button Template -->
    <Style x:Key="styleDatePickerCalendarDayButton" TargetType="{x:Type CalendarDayButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                    <Grid x:Name="grid">
                        <Border x:Name="border_today"
                            CornerRadius="2"
                            Background="#F9F1FF"
                            BorderBrush="#E0B8FF"
                            BorderThickness="1"
                            Visibility="Collapsed">
                        </Border>
                        <Border x:Name="border_selected"
                            CornerRadius="2"
                            Background="{StaticResource ThemeColor}"
                                Opacity="0.4"
                            BorderBrush="{StaticResource DarkAccentColor}"
                            BorderThickness="1"
                            Visibility="Collapsed">
                        </Border>
                        <Border x:Name="border" CornerRadius="3">
                            <TextBlock x:Name="block" 
                                   Foreground="#3A3A3A" 
                                   Margin="10,3,10,3" 
                                   Padding="5 7"
                                   Text="{TemplateBinding Content}"
                                   VerticalAlignment="Center"
                                   FontSize="{StaticResource CalendarDayFontSize}"
                                   HorizontalAlignment="Center"></TextBlock>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsInactive" Value="True">
                            <Setter TargetName="block" Property="Opacity" Value="0.5">
                            </Setter>
                            <Setter Property="IsEnabled" Value="False"></Setter>
                        </Trigger>
                        <Trigger Property="IsToday" Value="True">
                            <Setter TargetName="border_today" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"></Condition>
                                <Condition Property="IsToday" Value="False"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="border_selected" Property="Visibility" Value="Visible"></Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="border"
                                       Property="IsMouseOver"
                                       Value="True">
                                </Condition>
                                <Condition Property="IsInactive"
                                       Value="False">
                                </Condition>
                                <Condition Property="IsSelected"
                                       Value="False">
                                </Condition>
                                <Condition Property="IsToday"
                                       Value="False">
                                </Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding Source={StaticResource ThemeColor}, Path=Color}" Opacity="0.5"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Calendar Stylw -->
    <Style x:Key="styleDatePickerCalendar" TargetType="{x:Type Calendar}">
        <Setter Property="CalendarButtonStyle"
            Value="{StaticResource ResourceKey=styleDatePickerCalendarButton}">
        </Setter>
        <Setter Property="CalendarDayButtonStyle"
            Value="{StaticResource ResourceKey=styleDatePickerCalendarDayButton}">
        </Setter>
        <Setter Property="CalendarItemStyle"
            Value="{StaticResource ResourceKey=styleDatePickerCalendarItem}">
        </Setter>
    </Style>





</ResourceDictionary>