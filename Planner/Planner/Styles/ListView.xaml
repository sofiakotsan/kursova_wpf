<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- ListViewItem Template  -->
    <Style x:Key="TaskItemTmplate" TargetType="{x:Type ListViewItem}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Name="border" 
                                Padding="10 4 3 4"
                                Margin="0 0 5 7"
                                CornerRadius="7"
                                Background="#F9F9F9">
                            <Grid HorizontalAlignment="Stretch" Height="30">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>

                                <CheckBox Grid.Column="0" 
                                                    IsChecked="{ Binding IsDone, Mode=TwoWay}" 
                                                    VerticalAlignment="Center">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                    AncestorType={x:Type Window}}, 
                                                                                    Path=DataContext.EditCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </CheckBox>
                                <Border CornerRadius="10" Grid.Column="1" BorderThickness="1" BorderBrush="Transparent">
                                    <TextBox x:Name="taskText" Text="{ Binding Text, Mode=TwoWay }" 
                                             Style="{StaticResource TaskTextBoxTemlate}" >
                                        <TextBox.InputBindings>

                                        </TextBox.InputBindings>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                    AncestorType={x:Type Window}}, 
                                                                                    Path=DataContext.EditCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Border>
                                <ComboBox Grid.Column="2" SelectedItem="{ Binding Priority, Mode=TwoWay }" ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                    AncestorType={x:Type Window}}, 
                                                                                    Path=DataContext.Priorities}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                    AncestorType={x:Type Window}}, 
                                                                                    Path=DataContext.EditCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                                <Border Name="deleteBorder"   
                                        Grid.Column="3"
                                        CornerRadius="7">
                                    <Button
                                        Margin="3 0"
                                        VerticalAlignment="Center"
                                        CommandParameter="{ Binding Path=.}"  
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor,
                                                                                    AncestorType={x:Type Window}}, 
                                                                                    Path=DataContext.DeleteCommand}"
                                        Background="Transparent"
                                        BorderBrush="Transparent">
                                        <Image Name="deleteIcon"
                                           Source="/../Resources/Images/delete-button.png" 
                                           Height="15" 
                                           Opacity="0.5"
                                           VerticalAlignment="Center"/>
                                    </Button>
                                </Border>

                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F2F2F2" TargetName="border"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True" SourceName="deleteBorder">
                                <Setter Property="Background" Value="#E7E7E7" TargetName="deleteBorder"/>
                                <Setter Property="Opacity" Value="1" TargetName="deleteIcon"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

</ResourceDictionary>